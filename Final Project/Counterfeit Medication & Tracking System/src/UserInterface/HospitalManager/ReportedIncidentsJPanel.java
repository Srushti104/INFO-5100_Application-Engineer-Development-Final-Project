/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HospitalManager;

import Business.WorkRequests.DrugTesterWorkRequest;
import Business.DrugTestingOrganization;
import Business.Enterprise;
import Business.FDAEnterprise;
import Business.HospitalEnterprise;
import Business.InventoryItem;
import Business.WorkRequests.ManagerWorkRequest;
import Business.Network;
import Business.Organization;
import Business.UserAccount;
import Business.WorkRequests.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bobba
 */
public class ReportedIncidentsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Network network;
    UserAccount userAccount;

    /**
     * Creates new form ReportedIncidentsJPanel
     */
    public ReportedIncidentsJPanel(JPanel userProcessContainer, Network network, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.userAccount = userAccount;
        refresh();
    }

    public void refresh() {
        int rowcount = requestsTable.getRowCount();

        for (int i = rowcount - 1; i >= 0; i--) {
            ((DefaultTableModel) requestsTable.getModel()).removeRow(i);

        }

        Enterprise e = network.getEnterpriseDirectory().getMyEnterprise(userAccount);

        if (e.getClass().equals(HospitalEnterprise.class)) {
            HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) e;
            Organization org = ((HospitalEnterprise) e).getManagementOrganization();
            for (WorkRequest workRequest : org.getWorkQueue().getWorkRequestList()) {
                ManagerWorkRequest managerWokrRequest = (ManagerWorkRequest) workRequest;
                Object row[] = new Object[7];
                row[0] = workRequest;
                row[1] = workRequest.getSender();

                if (workRequest.getReceiver() != null) {
                    row[2] = workRequest.getReceiver().getEmployee().getFirstName() + " " + workRequest.getReceiver().getEmployee().getLastName();

                }

                row[3] = workRequest.getStatus();
                row[4] = hospitalEnterprise.getEnterpriseName();
                row[5] = managerWokrRequest.getDgName();
                row[6] = managerWokrRequest.getProblemReported();
                //  row[4]=workRequest.getDrugName();
                //  row[5]=workRequest.getQuantity();

                ((DefaultTableModel) requestsTable.getModel()).addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();
        assignButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        reportFDAButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(238, 238, 238));
        setMaximumSize(new java.awt.Dimension(1280, 700));
        setMinimumSize(new java.awt.Dimension(1280, 700));
        setPreferredSize(new java.awt.Dimension(1280, 700));

        backButton.setBackground(new java.awt.Color(238, 238, 238));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/back.png"))); // NOI18N
        backButton.setBorder(null);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(238, 238, 238));
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/refresh.png"))); // NOI18N
        refreshButton.setBorder(null);
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        requestsTable.setBackground(new java.awt.Color(238, 238, 238));
        requestsTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        requestsTable.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        requestsTable.setForeground(new java.awt.Color(34, 40, 49));
        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Enterprise Name", "Drug Name", "Problem"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestsTable.setGridColor(new java.awt.Color(34, 40, 49));
        requestsTable.setMaximumSize(new java.awt.Dimension(1000, 122));
        requestsTable.setMinimumSize(new java.awt.Dimension(1000, 122));
        requestsTable.setPreferredSize(new java.awt.Dimension(1000, 122));
        requestsTable.setRowHeight(20);
        requestsTable.setSelectionBackground(new java.awt.Color(0, 173, 181));
        requestsTable.setSelectionForeground(new java.awt.Color(238, 238, 238));
        jScrollPane1.setViewportView(requestsTable);

        assignButton.setBackground(new java.awt.Color(57, 62, 70));
        assignButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        assignButton.setForeground(new java.awt.Color(238, 238, 238));
        assignButton.setText("ASSIGN TO ME");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 40, 49));
        jLabel1.setText("VIEW REQUESTS");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 173, 181)));

        reportFDAButton.setBackground(new java.awt.Color(57, 62, 70));
        reportFDAButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        reportFDAButton.setForeground(new java.awt.Color(238, 238, 238));
        reportFDAButton.setText("REPORT TO FDA");
        reportFDAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportFDAButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(assignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(reportFDAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(590, 590, 590)
                        .addComponent(jLabel1)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportFDAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:

        int row = requestsTable.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a work request");
            return;
        }

        WorkRequest workRequest = (WorkRequest) requestsTable.getValueAt(row, 0);

        if (workRequest.getReceiver() == null) {

            workRequest.setReceiver(userAccount);

            workRequest.setStatus("Pending");

            refresh();
        } else {
            JOptionPane.showMessageDialog(this, "The task is already assigned to other person");
        }
    }//GEN-LAST:event_assignButtonActionPerformed

    private void reportFDAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportFDAButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestsTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a work request");
            return;
        }
        WorkRequest workRequest = (WorkRequest) requestsTable.getValueAt(selectedRow, 0);

        if (workRequest.getReceiver() != null) {

            workRequest.setReceiver(userAccount);

            workRequest.setStatus("Sent To FDA tester");
            refresh();
        }

        ManagerWorkRequest managerWokrRequest = (ManagerWorkRequest) requestsTable.getValueAt(selectedRow, 0);

        if (managerWokrRequest.getReceiver() != null && userAccount == managerWokrRequest.getReceiver()) {
            // Enterprise e5=network.getEnterpriseDirectory().getMyEnterprise(userAccount);
            // HospitalEnterprise hospitalEnterprise=(HospitalEnterprise)e5;

            DrugTesterWorkRequest drugTesterWorkRequest = new DrugTesterWorkRequest();
            drugTesterWorkRequest.setSender(userAccount);
            drugTesterWorkRequest.setRequestDate(new Date());
            drugTesterWorkRequest.setMessage("Test the Drug");
            drugTesterWorkRequest.setStatus("Drug under testing");
            // licenseManagerWorkRequest.setManuName(manuNameField.getText());
            // licenseManagerWorkRequest.setDrugManu(drugaManuTextArea.getText());
            drugTesterWorkRequest.setResultTest("Drug test");
            //drugTesterWorkRequest.setDrug(managerWokrRequest.getDrug());
            // drugTesterWorkRequest.setEnterprise(network);

            Enterprise e = network.getEnterpriseDirectory().getMyEnterprise(userAccount);

            if (e.getClass().equals(HospitalEnterprise.class)) {
                HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) e;
                FDAEnterprise e1 = null;
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getClass().equals(FDAEnterprise.class)) {
                        e1 = (FDAEnterprise) enterprise;
                    }
                }

                /*  for(InventoryItem itm:hospitalEnterprise.getInventoryCatalog().getInventoryList())
        {
            if(itm.getPackage1().getPackageID()==managerWokrRequest.getPackID())
            {
                drugTesterWorkRequest.setPackage1(itm.getPackage1());
                
            }
            
        }*/
                drugTesterWorkRequest.setEnterprise(hospitalEnterprise);
                drugTesterWorkRequest.setPackage1(managerWokrRequest.getPackage1());
                DrugTestingOrganization drugTestingOrganization = e1.getDrugTestingOrganization();
                drugTestingOrganization.getWorkQueue().getWorkRequestList().add(drugTesterWorkRequest);

                // userAccount.getWorkQueue().getWorkRequestList().add(salesRequest);
                hospitalEnterprise.getManagementOrganization().getSentWorkQueue().getWorkRequestList().add(drugTesterWorkRequest);

                JOptionPane.showMessageDialog(null, "Work Request Sent");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please assign it and then proceed/Task might be assigned to other person");
        }
    }//GEN-LAST:event_reportFDAButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton reportFDAButton;
    private javax.swing.JTable requestsTable;
    // End of variables declaration//GEN-END:variables
}
