/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EnterpriseAdmin;

import Business.Employee;
import Business.Enterprise;
import Business.Network;
import Business.Organization;
import Business.UserAccount;
import Business.UserAccountDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nived
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Network network;
    UserAccount userAccount;

    /**
     * Creates new form ManageUserAccountJPanel
     */
    public ManageUserAccountJPanel(JPanel userProcessContainer, Network network, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.userAccount = userAccount;
        refresh();
    }

    public void refresh() {
        int rowCount = userAccountJTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) userAccountJTable.getModel()).removeRow(i);
        }
        Enterprise e = network.getEnterpriseDirectory().getMyEnterprise(userAccount);
        for (Organization o : e.getOrganizationDirectory().getOrgList()) {
            Object row[] = new Object[4];
            for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                row[0] = ua;
                row[1] = ua.getEmployee().getFirstName() +" "+ ua.getEmployee().getLastName();
                row[2] = ua.getRole().getRoleName();
                row[3] = o;
                ((DefaultTableModel) userAccountJTable.getModel()).addRow(row);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountJTable = new javax.swing.JTable();
        addEmployeeeJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        deleteAccountJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(238, 238, 238));
        setMaximumSize(new java.awt.Dimension(1280, 700));
        setMinimumSize(new java.awt.Dimension(1280, 700));
        setPreferredSize(new java.awt.Dimension(1280, 700));

        refreshButton.setBackground(new java.awt.Color(238, 238, 238));
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/refresh.png"))); // NOI18N
        refreshButton.setBorder(null);
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        userAccountJTable.setBackground(new java.awt.Color(238, 238, 238));
        userAccountJTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        userAccountJTable.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        userAccountJTable.setForeground(new java.awt.Color(34, 40, 49));
        userAccountJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Role", "Organization"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userAccountJTable.setGridColor(new java.awt.Color(34, 40, 49));
        userAccountJTable.setMaximumSize(new java.awt.Dimension(680, 122));
        userAccountJTable.setMinimumSize(new java.awt.Dimension(680, 122));
        userAccountJTable.setPreferredSize(new java.awt.Dimension(680, 122));
        userAccountJTable.setRowHeight(22);
        userAccountJTable.setSelectionBackground(new java.awt.Color(0, 173, 181));
        userAccountJTable.setSelectionForeground(new java.awt.Color(238, 238, 238));
        jScrollPane1.setViewportView(userAccountJTable);

        addEmployeeeJButton.setBackground(new java.awt.Color(57, 62, 70));
        addEmployeeeJButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        addEmployeeeJButton.setForeground(new java.awt.Color(238, 238, 238));
        addEmployeeeJButton.setText("ADD ACCOUNT");
        addEmployeeeJButton.setPreferredSize(new java.awt.Dimension(150, 33));
        addEmployeeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeeJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(238, 238, 238));
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/back.png"))); // NOI18N
        backJButton.setBorder(null);
        backJButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        backJButton.setMaximumSize(new java.awt.Dimension(60, 60));
        backJButton.setMinimumSize(new java.awt.Dimension(60, 60));
        backJButton.setPreferredSize(new java.awt.Dimension(60, 60));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        deleteAccountJButton.setBackground(new java.awt.Color(57, 62, 70));
        deleteAccountJButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        deleteAccountJButton.setForeground(new java.awt.Color(238, 238, 238));
        deleteAccountJButton.setText("DELETE ACCOUNT");
        deleteAccountJButton.setPreferredSize(new java.awt.Dimension(150, 33));
        deleteAccountJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(34, 40, 49));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MANAGE USER ACCOUNT");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 173, 181)));
        jLabel2.setMaximumSize(new java.awt.Dimension(165, 30));
        jLabel2.setMinimumSize(new java.awt.Dimension(165, 30));
        jLabel2.setPreferredSize(new java.awt.Dimension(165, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(300, 300, 300)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(addEmployeeeJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(deleteAccountJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(300, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(530, 530, 530)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteAccountJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addEmployeeeJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(285, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void addEmployeeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeeJButtonActionPerformed

        JPanel panel = new AddUserAccountJPanel(userProcessContainer, network, userAccount);
        userProcessContainer.add("AddUserAccountJPanel", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_addEmployeeeJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed
    private Organization findUserAccountOrganization(UserAccount userAccount) {
        Enterprise e = network.getEnterpriseDirectory().getMyEnterprise(userAccount);
        for (Organization o : e.getOrganizationDirectory().getOrgList()) {
            for (UserAccount user : o.getUserAccountDirectory().getUserAccountList()) {
                if (userAccount.equals(user)) {
                    return o;
                }
            }
        }
        return null;
    }
    
    private static List<Object> getRowAt(JTable jTable, int selectedRow) {
        List<Object> result = new ArrayList<>();
        int colCount = jTable.getColumnCount();
        for (int i = 0; i < colCount; i++) {
            result.add(jTable.getModel().getValueAt(selectedRow, i));
        }
        return result;
    }
    private void deleteAccountJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = userAccountJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        List<Object> rowValues = getRowAt(userAccountJTable, selectedRow);
        UserAccount userAccount = (UserAccount) rowValues.get(0);
        int count = userAccountJTable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                int selectionButton = JOptionPane.YES_NO_OPTION;
                int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
                if (selectionResult == JOptionPane.YES_OPTION) {

                    Organization userOrganization = findUserAccountOrganization(userAccount);

                    if (userOrganization != null) {
                        List<UserAccount> userAccountList = userOrganization.getUserAccountDirectory().getUserAccountList();
                        int userIndexInList = 0;
                        for (; userIndexInList < userAccountList.size(); userIndexInList++) {
                            if (userAccount.equals(userAccountList.get(userIndexInList))) {
                                break;
                            }
                        }

                        if (userIndexInList < userAccountList.size()) {
                            userAccountList.remove(userIndexInList);
                            refresh();
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select a Row!!");
            }
        }
    }//GEN-LAST:event_deleteAccountJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmployeeeJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteAccountJButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable userAccountJTable;
    // End of variables declaration//GEN-END:variables
}
