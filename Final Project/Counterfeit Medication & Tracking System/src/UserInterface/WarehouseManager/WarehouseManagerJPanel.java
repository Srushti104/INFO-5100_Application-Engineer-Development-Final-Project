/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseManager;

import Business.Business;
import Business.DistributorEnterprise;
import Business.Enterprise;
import Business.InventoryItem;
import Business.Network;
import Business.Organization;
import Business.UserAccount;
import UserInterface.BusinessAdmin.AdminJPanel;
import java.awt.CardLayout;
import javax.swing.JPanel;

/**
 *
 * @author nived
 */
public class WarehouseManagerJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Business business;
    UserAccount userAccount;

    /**
     * Creates new form WarehouseManagerJPanel
     */
    public WarehouseManagerJPanel(JPanel userProcessContainer, Business business, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userAccount = userAccount;
        //imaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/warehouse.jpg")));
//        
        alertLabel.setVisible(false);

        refresh();
    }

    public void refresh() {
        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            if (enterprise.getClass().equals(DistributorEnterprise.class)) {
                                DistributorEnterprise distributorEnterprise = (DistributorEnterprise) enterprise;

//                                if (distributorEnterprise.getLicenseNumber() == 0) {
//                                    orderDrugButton.setVisible(false);
//                                    checkInventoryButton.setVisible(false);
//                                    viewRequestedOrdersButton.setVisible(false);
//                                    viewRecievedOrderButton.setVisible(false);
//                                    infoLabel.setVisible(true);
//                                }
                               

                                for (InventoryItem inventoryItem : distributorEnterprise.getInventoryCatalog().getInventoryList()) {
                                    if (inventoryItem.getPackage1().getPackageStatus().equalsIgnoreCase("Illegetimate Drug")) {
                                         alertLabel.setVisible(true);
                                    }

                                }

                            }
                        }
                    }
                }
            }
        }

//        for(Network network:business.getNetworkDirectory().getNetworkList())
//        {
//            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList())
//            {
//                if(enterprise.getClass().equals(DistributorEnterprise.class))
//                {
//                    
//                DistributorEnterprise distributorEnterprise=(DistributorEnterprise)enterprise;
//            
////            for(Transaction transaction:network.getTransactionHistory().getTransactionList())
////            {
////                if(transaction.getDistributorEnterprise() == null)
////                {
////                    return;
////                }
////             if(transaction.getDistributorEnterprise().getEnterpriseName()== distributorEnterprise.getEnterpriseName())
////             {
////                
////             }
////            }
//                }
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orderDrugButton = new javax.swing.JButton();
        viewRequestedOrdersButton = new javax.swing.JButton();
        checkInventoryButton = new javax.swing.JButton();
        viewRecievedOrderButton = new javax.swing.JButton();
        alertLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(238, 238, 238));
        setMaximumSize(new java.awt.Dimension(1280, 700));
        setMinimumSize(new java.awt.Dimension(1280, 700));
        setPreferredSize(new java.awt.Dimension(1280, 700));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 40, 49));
        jLabel1.setText("WAREHOUSE MANAGER WORK-AREA");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 173, 181)));

        orderDrugButton.setBackground(new java.awt.Color(57, 62, 70));
        orderDrugButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        orderDrugButton.setForeground(new java.awt.Color(238, 238, 238));
        orderDrugButton.setText("ORDER DRUGS");
        orderDrugButton.setMaximumSize(new java.awt.Dimension(200, 33));
        orderDrugButton.setMinimumSize(new java.awt.Dimension(200, 33));
        orderDrugButton.setPreferredSize(new java.awt.Dimension(200, 33));
        orderDrugButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderDrugButtonActionPerformed(evt);
            }
        });

        viewRequestedOrdersButton.setBackground(new java.awt.Color(57, 62, 70));
        viewRequestedOrdersButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        viewRequestedOrdersButton.setForeground(new java.awt.Color(238, 238, 238));
        viewRequestedOrdersButton.setText("VIEW ORDER REQUESTS");
        viewRequestedOrdersButton.setMaximumSize(new java.awt.Dimension(200, 33));
        viewRequestedOrdersButton.setMinimumSize(new java.awt.Dimension(200, 33));
        viewRequestedOrdersButton.setPreferredSize(new java.awt.Dimension(200, 33));
        viewRequestedOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestedOrdersButtonActionPerformed(evt);
            }
        });

        checkInventoryButton.setBackground(new java.awt.Color(57, 62, 70));
        checkInventoryButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        checkInventoryButton.setForeground(new java.awt.Color(238, 238, 238));
        checkInventoryButton.setText("CHECK INVENTORY");
        checkInventoryButton.setMaximumSize(new java.awt.Dimension(200, 33));
        checkInventoryButton.setMinimumSize(new java.awt.Dimension(200, 33));
        checkInventoryButton.setPreferredSize(new java.awt.Dimension(200, 33));
        checkInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInventoryButtonActionPerformed(evt);
            }
        });

        viewRecievedOrderButton.setBackground(new java.awt.Color(57, 62, 70));
        viewRecievedOrderButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        viewRecievedOrderButton.setForeground(new java.awt.Color(238, 238, 238));
        viewRecievedOrderButton.setText("VIEW RECIEVED ORDERS");
        viewRecievedOrderButton.setMaximumSize(new java.awt.Dimension(200, 33));
        viewRecievedOrderButton.setMinimumSize(new java.awt.Dimension(200, 33));
        viewRecievedOrderButton.setPreferredSize(new java.awt.Dimension(200, 33));
        viewRecievedOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecievedOrderButtonActionPerformed(evt);
            }
        });

        alertLabel.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        alertLabel.setForeground(new java.awt.Color(255, 0, 0));
        alertLabel.setText("*ILLEGITIMATE DRUGS HAVE BEEN REPORTED AND REMOVED FROM THE INVENTORY");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(491, 491, 491)
                        .add(jLabel1))
                    .add(layout.createSequentialGroup()
                        .add(541, 541, 541)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(orderDrugButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(viewRecievedOrderButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(checkInventoryButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, viewRequestedOrdersButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(364, 364, 364)
                        .add(alertLabel)))
                .addContainerGap(364, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(120, 120, 120)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(100, 100, 100)
                .add(orderDrugButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(50, 50, 50)
                .add(checkInventoryButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(50, 50, 50)
                .add(viewRequestedOrdersButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(50, 50, 50)
                .add(viewRecievedOrderButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 49, Short.MAX_VALUE)
                .add(alertLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(100, 100, 100))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void orderDrugButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderDrugButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            OrderDrugsJPanel orderDrugsJPanel = new OrderDrugsJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("OrderDrugs", orderDrugsJPanel);

                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);

                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_orderDrugButtonActionPerformed

    private void viewRequestedOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestedOrdersButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {

                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {

                            DistributorEnterprise e = (DistributorEnterprise) network.getEnterpriseDirectory().getMyEnterprise(userAccount);
                            Organization org = e.getWarehouseOrganization();
                            ViewRequestedOrdersJPanel viewRequestedOrdersJPanel = new ViewRequestedOrdersJPanel(userProcessContainer, org.getSentWorkQueue());
                            userProcessContainer.add("viewReqOrders", viewRequestedOrdersJPanel);
                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_viewRequestedOrdersButtonActionPerformed

    private void checkInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInventoryButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            CheckWarehouseInventoryJPanel checkWarehouseInventoryJPanel = new CheckWarehouseInventoryJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("CheckInventory", checkWarehouseInventoryJPanel);

                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);

                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_checkInventoryButtonActionPerformed

    private void viewRecievedOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecievedOrderButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            ViewReceivedOrderJPanel viewReceivedOrderJPanel = new ViewReceivedOrderJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("ViewReceivedOrder", viewReceivedOrderJPanel);
                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);

                        }

                    }
                }
            }
        }

    }//GEN-LAST:event_viewRecievedOrderButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alertLabel;
    private javax.swing.JButton checkInventoryButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton orderDrugButton;
    private javax.swing.JButton viewRecievedOrderButton;
    private javax.swing.JButton viewRequestedOrdersButton;
    // End of variables declaration//GEN-END:variables
}
