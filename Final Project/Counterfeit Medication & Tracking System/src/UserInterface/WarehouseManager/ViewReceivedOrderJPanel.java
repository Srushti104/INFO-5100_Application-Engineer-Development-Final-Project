/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseManager;

import Business.DistributorEnterprise;
import Business.Drug;
import Business.Enterprise;
import Business.LotOfDrug;
import Business.Network;
//import Business.Order;
import Business.Organization;
import Business.Package1;
import Business.UserAccount;
import Business.WarehouseManagerWorkRequest;
import Business.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nived
 */
public class ViewReceivedOrderJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    Network network;
    UserAccount userAccount;

    /**
     * Creates new form ViewReceivedOrderJPanel
     */
    public ViewReceivedOrderJPanel(JPanel userProcessContainer,Network network,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.network=network;
        this.userAccount=userAccount;
        addDrugButton.setEnabled(false);
        viewSuspectDrugsButton.setVisible(false);
        Refresh();
    }

    
    public void Refresh()
    {
       int rowcount=requestsTable.getRowCount();
        
        for(int i=rowcount-1;i>=0;i--)
        {
            ((DefaultTableModel)requestsTable.getModel()).removeRow(i);
            
            
            
        }
        
        Enterprise e=network.getEnterpriseDirectory().getMyEnterprise(userAccount);
       
       /*  SupplierEnterprise e1 = null;
        for(Enterprise enterprise:business.getEnterpriseDirectory().getEnterpriseList())
        {
            if(enterprise.getClass().equals(SupplierEnterprise.class))
                
            {
                e1=(SupplierEnterprise)enterprise;
            }
        }*/
       Organization org=((DistributorEnterprise)e).getWarehouseOrganization();
        for(WorkRequest workRequest:org.getWorkQueue().getWorkRequestList())
                
        {
            WarehouseManagerWorkRequest wareHouseManagerWorkRequest=(WarehouseManagerWorkRequest)workRequest;
         Object row[]=new Object[7];
         row[0]=workRequest;
         row[1]=workRequest.getSender().getEmployee().getFirstName();
         
         if(workRequest.getReceiver()!= null)
         {
         row[2]=workRequest.getReceiver().getEmployee().getFirstName();
         
         }
         
         row[3]=workRequest.getStatus();
         row[4]=wareHouseManagerWorkRequest.getDrug();
         row[5]=wareHouseManagerWorkRequest.getQuantity();
      //   row[6]=wareHouseManagerWorkRequest.getOrder();
      //  row[4]=workRequest.getDrugName();
      //  row[5]=workRequest.getQuantity();
         
        
            
           ((DefaultTableModel)requestsTable.getModel()).addRow(row);   
        } 
        
        
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        assignButton = new javax.swing.JButton();
        addDrugButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        checkCounterfeitButton = new javax.swing.JButton();
        viewSuspectDrugsButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("View Requests");

        assignButton.setText("Assign to me");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });

        addDrugButton.setText("Add To Inventory");
        addDrugButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDrugButtonActionPerformed(evt);
            }
        });

        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Drug Name", "Quantity", "Order"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestsTable);

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/refresh_button.jpg"))); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/backButton.jpg"))); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        checkCounterfeitButton.setText("Check Suspect Drugs");
        checkCounterfeitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCounterfeitButtonActionPerformed(evt);
            }
        });

        viewSuspectDrugsButton.setText("View Suspect Drugs");
        viewSuspectDrugsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSuspectDrugsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(assignButton)
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(viewSuspectDrugsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkCounterfeitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addDrugButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDrugButton)
                    .addComponent(assignButton)
                    .addComponent(checkCounterfeitButton))
                .addGap(18, 18, 18)
                .addComponent(viewSuspectDrugsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:

        int row=requestsTable.getSelectedRow();

        if(row<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a work request");
            return;
        }

        WorkRequest workRequest=(WorkRequest)requestsTable.getValueAt(row, 0);
        
        

        if(workRequest.getReceiver()==null)
        {

            workRequest.setReceiver(userAccount);

            workRequest.setStatus("Order Received");
            
            //addDrugButton.setEnabled(true);

            Refresh();
        }

        else
        {
            JOptionPane.showMessageDialog(this, "The task is already assogned to other person");
        }
    }//GEN-LAST:event_assignButtonActionPerformed

    private void addDrugButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDrugButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=requestsTable.getSelectedRow();

        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a work request");
            return;
        }

        WarehouseManagerWorkRequest wareHouseManagerWorkRequest=(WarehouseManagerWorkRequest)requestsTable.getValueAt(selectedRow, 0);

//        if(wareHouseManagerWorkRequest.getReceiver()!= null && userAccount == wareHouseManagerWorkRequest.getReceiver())
//        {
//            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList())
//            {
//                if(enterprise.getClass().equals(DistributorEnterprise.class))
//                {
//                    DistributorEnterprise distributorEnterprise=(DistributorEnterprise)enterprise;
//                                        
//                    int q=wareHouseManagerWorkRequest.getQuantity();
//                    
//        //            Order ord=wareHouseManagerWorkRequest.getOrder();
//                    
//                    for(LotOfDrug lotOfDrug:ord.getLotOfDrugsList())
//                    {
//                    for(Package1 p:lotOfDrug.getPackageList())
//                    {
//                        distributorEnterprise.getInventoryCatalog().newInventoryItem(p);
//                        addDrugButton.setEnabled(false);
//                    }
//                    
//                    }
//                    
//                    JOptionPane.showMessageDialog(null,"Drugs added to Inventory");
//                }
//            }
//        }
//
//        else
//        {
//            JOptionPane.showMessageDialog(this, "Please assign it and then proceed/Task might be assigned to other person");
//        }
    }//GEN-LAST:event_addDrugButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        Refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout=(CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void checkCounterfeitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCounterfeitButtonActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow=requestsTable.getSelectedRow();

        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a work request");
            return;
        }

        WarehouseManagerWorkRequest wareHouseManagerWorkRequest=(WarehouseManagerWorkRequest)requestsTable.getValueAt(selectedRow, 0);

//        for(Transaction transaction:network.getTransactionHistory().getTransactionList())
//        {
//            Order ord=wareHouseManagerWorkRequest.getOrder();
//                    
//                    
//                    for(LotOfDrug lotOfDrug:ord.getLotOfDrugsList())
//                    {
//                     
//                    
//                    for(Package1 p:lotOfDrug.getPackageList())
//                    {
//                       if(transaction.getPackage1().getPackageID()== p.getPackageID())
//                       {
//                           if(transaction.getManufacturerEnterprise() == null || transaction.getDistributorEnterprise() == null)
//                           {
//                               JOptionPane.showMessageDialog(null,"Drugs are suspected");
//                               addDrugButton.setEnabled(false);
//                               viewSuspectDrugsButton.setVisible(true);
//                               //viewSuspectDrugsButton.setVisible(true);
//                               p.setPackageStatus("Suspect Drug");
//                              
//                               viewSuspectDrugsButton.setEnabled(true);
//                               int lotid=p.getDisLotID();
//                               
//                               for(Package1 p1:lotOfDrug.getPackageList())
//                               {
//                                   if(p1.getDisLotID()== lotid)
//                                   {
//                                       p1.setPackageStatus("Suspect Drug");
//                                       
//                                   }
//                               }
//                                       
//                               
//                               
//                               
//                           }
//                           
//                           else if(transaction.getManufacturerEnterprise() != null && transaction.getManufacturerEnterprise().getLicenseNumber() == 0)
//                           {
//                               JOptionPane.showMessageDialog(null,"Not a licensed manufacturer,drugs are not safe");
//                           }
//                           
//                           
//                    }
//                       
//                       
//                    }
//
//                    
//            }
//            
//        }
//        
        
                       addDrugButton.setEnabled(true);
                        //   JOptionPane.showMessageDialog(null,"drugs are safe");
                       
        
        
    }//GEN-LAST:event_checkCounterfeitButtonActionPerformed

    private void viewSuspectDrugsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSuspectDrugsButtonActionPerformed
        // TODO add your handling code here:
        
         int selectedRow=requestsTable.getSelectedRow();

        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a work request");
            return;
        }

        WarehouseManagerWorkRequest wareHouseManagerWorkRequest=(WarehouseManagerWorkRequest)requestsTable.getValueAt(selectedRow, 0);

//        ViewDrugsForSuspectWhileAddingJPanel viewDrugsForSuspectWhileAddingJPanel=new ViewDrugsForSuspectWhileAddingJPanel(userProcessContainer,network,userAccount,wareHouseManagerWorkRequest);
//        userProcessContainer.add("vssukjs",viewDrugsForSuspectWhileAddingJPanel);
//        
        CardLayout cardLayout=(CardLayout)userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_viewSuspectDrugsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDrugButton;
    private javax.swing.JButton assignButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton checkCounterfeitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable requestsTable;
    private javax.swing.JButton viewSuspectDrugsButton;
    // End of variables declaration//GEN-END:variables
}
