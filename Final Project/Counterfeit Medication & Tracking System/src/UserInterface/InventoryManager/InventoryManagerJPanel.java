/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.InventoryManager;

import Business.Business;
import Business.Enterprise;
import Business.HospitalEnterprise;
import Business.InventoryItem;
import Business.Network;
import Business.Organization;
import Business.Transaction;
import Business.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;

/**
 *
 * @author nived
 */
public class InventoryManagerJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Business business;
    UserAccount userAccount;

    /**
     * Creates new form InventoryManagerJPanel
     */
    public InventoryManagerJPanel(JPanel userProcessContainer, Business business, UserAccount userAccount) {
        initComponents();
   //     distributorLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/drugsi.jpg")));

        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userAccount = userAccount;
        infoLabel3.setVisible(false);
        refresh();
    }

    public void refresh() {
        boolean flag = false;
        for (Network network : business.getNetworkDirectory().getNetworkList()) {

            Enterprise en = network.getEnterpriseDirectory().getMyEnterprise(userAccount);
            HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) en;
            for (InventoryItem inventoryItem : hospitalEnterprise.getInventoryCatalog().getInventoryList()) {
                if (inventoryItem.getPackage1().getPackageStatus().equalsIgnoreCase("Illegetimate Drug")) {
                    flag = true;
                }
            }
            if (flag) {
                infoLabel3.setVisible(true);

            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        checkInventoryButton = new javax.swing.JButton();
        orderDrugButton = new javax.swing.JButton();
        viewReceivedOrdersButton = new javax.swing.JButton();
        viewRequestedOrdersButton = new javax.swing.JButton();
        infoLabel3 = new javax.swing.JLabel();
        handleSuspectDrugs = new javax.swing.JButton();

        setBackground(new java.awt.Color(238, 238, 238));
        setForeground(new java.awt.Color(238, 238, 238));
        setMaximumSize(new java.awt.Dimension(1280, 700));
        setMinimumSize(new java.awt.Dimension(1280, 700));
        setPreferredSize(new java.awt.Dimension(1280, 700));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 40, 49));
        jLabel1.setText("INVENTORY MANAGER WORK-AREA");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 173, 181)));

        checkInventoryButton.setBackground(new java.awt.Color(57, 62, 70));
        checkInventoryButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        checkInventoryButton.setForeground(new java.awt.Color(238, 238, 238));
        checkInventoryButton.setText("CHECK INVENTORY");
        checkInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInventoryButtonActionPerformed(evt);
            }
        });

        orderDrugButton.setBackground(new java.awt.Color(57, 62, 70));
        orderDrugButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        orderDrugButton.setForeground(new java.awt.Color(238, 238, 238));
        orderDrugButton.setText("ORDER DRUG");
        orderDrugButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderDrugButtonActionPerformed(evt);
            }
        });

        viewReceivedOrdersButton.setBackground(new java.awt.Color(57, 62, 70));
        viewReceivedOrdersButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        viewReceivedOrdersButton.setForeground(new java.awt.Color(238, 238, 238));
        viewReceivedOrdersButton.setText("VIEW RECEIVED ORDERS");
        viewReceivedOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReceivedOrdersButtonActionPerformed(evt);
            }
        });

        viewRequestedOrdersButton.setBackground(new java.awt.Color(57, 62, 70));
        viewRequestedOrdersButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        viewRequestedOrdersButton.setForeground(new java.awt.Color(238, 238, 238));
        viewRequestedOrdersButton.setText("VIEW REQUESTED ORDERS");
        viewRequestedOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestedOrdersButtonActionPerformed(evt);
            }
        });

        infoLabel3.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        infoLabel3.setForeground(new java.awt.Color(255, 0, 0));
        infoLabel3.setText("*ILLEGITIMATE DRUGS HAVE BEEN REPORTED AND REMOVED FROM THE INVENTORY");

        handleSuspectDrugs.setBackground(new java.awt.Color(57, 62, 70));
        handleSuspectDrugs.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        handleSuspectDrugs.setForeground(new java.awt.Color(238, 238, 238));
        handleSuspectDrugs.setText("SUSPECTED DRUGS");
        handleSuspectDrugs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleSuspectDrugsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(492, 492, 492)
                        .add(jLabel1))
                    .add(layout.createSequentialGroup()
                        .add(364, 364, 364)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(checkInventoryButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(orderDrugButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(viewReceivedOrdersButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(viewRequestedOrdersButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(handleSuspectDrugs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(infoLabel3))))
                .add(364, 364, 364))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(120, 120, 120)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(50, 50, 50)
                .add(checkInventoryButton)
                .add(30, 30, 30)
                .add(orderDrugButton)
                .add(30, 30, 30)
                .add(viewReceivedOrdersButton)
                .add(30, 30, 30)
                .add(viewRequestedOrdersButton)
                .add(30, 30, 30)
                .add(handleSuspectDrugs)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 98, Short.MAX_VALUE)
                .add(infoLabel3)
                .add(100, 100, 100))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInventoryButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            CheckInventoryJPanel checkInventoryJPanel = new CheckInventoryJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("CheckIn", checkInventoryJPanel);

                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_checkInventoryButtonActionPerformed

    private void orderDrugButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderDrugButtonActionPerformed
        // TODO add your handling code here:
        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            OrderDrugJPanel orderDrugJPanel = new OrderDrugJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("CheckIn", orderDrugJPanel);

                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);
                        }
                    }
                }
            }
        }


    }//GEN-LAST:event_orderDrugButtonActionPerformed

    private void viewReceivedOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReceivedOrdersButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            ViewReceivedOrdersJPanel viewReceivedOrdersJPanel = new ViewReceivedOrdersJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("ViewRece", viewReceivedOrdersJPanel);
                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);

                        }

                    }
                }
            }
        }

    }//GEN-LAST:event_viewReceivedOrdersButtonActionPerformed

    private void viewRequestedOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestedOrdersButtonActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {

                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {

                            if (enterprise.getClass().equals(HospitalEnterprise.class)) {
                                HospitalEnterprise e = (HospitalEnterprise) network.getEnterpriseDirectory().getMyEnterprise(userAccount);
                                Organization org = e.getInventoryManagementOrganization();
                                ViewRequestForDrugsJPanel viewRequestForDrugsJPanel = new ViewRequestForDrugsJPanel(userProcessContainer, org.getSentWorkQueue());
                                userProcessContainer.add("viewReqOrdersDrugs", viewRequestForDrugsJPanel);
                                CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                                cardLayout.next(userProcessContainer);
                            } 

                        }

                    }
                }
            }
        }
    }//GEN-LAST:event_viewRequestedOrdersButtonActionPerformed

    private void handleSuspectDrugsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleSuspectDrugsActionPerformed
        // TODO add your handling code here:

        for (Network network : business.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrgList()) {
                    for (UserAccount userAccount1 : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount == userAccount1) {
                            HandleSuspectDrugsJPanel handleSuspectDrugsJPanel = new HandleSuspectDrugsJPanel(userProcessContainer, network, userAccount);
                            userProcessContainer.add("handledrugs", handleSuspectDrugsJPanel);
                            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                            cardLayout.next(userProcessContainer);

                        }

                    }
                }
            }
        }
    }//GEN-LAST:event_handleSuspectDrugsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkInventoryButton;
    private javax.swing.JButton handleSuspectDrugs;
    private javax.swing.JLabel infoLabel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton orderDrugButton;
    private javax.swing.JButton viewReceivedOrdersButton;
    private javax.swing.JButton viewRequestedOrdersButton;
    // End of variables declaration//GEN-END:variables
}
