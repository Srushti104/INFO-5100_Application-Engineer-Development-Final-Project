/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.NetworkAdmin;

import Business.DistributorEnterprise;
import Business.Employee;
import Business.Enterprise;
import Business.FDAEnterprise;
import Business.HospitalEnterprise;
import Business.ManufacturerEnterprise;
import Business.Network;
import Business.Roles.EnterpriseAdminRole;
import Business.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author srush
 */
public class AddEnterpriseJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Network network;
    UserAccount userAccount;

    /**
     * Creates new form AddEnterpriseJPanel
     */
    public AddEnterpriseJPanel(JPanel userProcessContainer, Network network, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.userAccount = userAccount;
        enterpriseTypeComboBox.removeAllItems();

        enterpriseTypeComboBox.addItem(Enterprise.FDA);
        enterpriseTypeComboBox.addItem(Enterprise.MANUFACTURER);
        enterpriseTypeComboBox.addItem(Enterprise.DISTRIBUTOR);
        enterpriseTypeComboBox.addItem(Enterprise.HOSPITAL);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        enterpriseTypeComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        enterpriseNameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(238, 238, 238));
        setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        setMaximumSize(new java.awt.Dimension(1280, 700));
        setMinimumSize(new java.awt.Dimension(1280, 700));
        setPreferredSize(new java.awt.Dimension(1280, 700));

        passwordField.setBackground(new java.awt.Color(238, 238, 238));
        passwordField.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        passwordField.setForeground(new java.awt.Color(34, 40, 49));
        passwordField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        passwordField.setMaximumSize(new java.awt.Dimension(200, 24));
        passwordField.setMinimumSize(new java.awt.Dimension(200, 24));
        passwordField.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 40, 49));
        jLabel1.setText("ADD NEW ENTERPRISE");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 173, 181)));
        jLabel1.setMaximumSize(new java.awt.Dimension(198, 30));
        jLabel1.setMinimumSize(new java.awt.Dimension(198, 30));
        jLabel1.setPreferredSize(new java.awt.Dimension(198, 30));

        jLabel7.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(34, 40, 49));
        jLabel7.setText("USER FIRST NAME");

        firstNameField.setBackground(new java.awt.Color(238, 238, 238));
        firstNameField.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        firstNameField.setForeground(new java.awt.Color(34, 40, 49));
        firstNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        firstNameField.setMaximumSize(new java.awt.Dimension(200, 24));
        firstNameField.setMinimumSize(new java.awt.Dimension(200, 24));
        firstNameField.setPreferredSize(new java.awt.Dimension(200, 24));

        enterpriseTypeComboBox.setBackground(new java.awt.Color(238, 238, 238));
        enterpriseTypeComboBox.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        enterpriseTypeComboBox.setForeground(new java.awt.Color(34, 40, 49));
        enterpriseTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseTypeComboBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        enterpriseTypeComboBox.setMaximumSize(new java.awt.Dimension(200, 24));
        enterpriseTypeComboBox.setMinimumSize(new java.awt.Dimension(200, 24));
        enterpriseTypeComboBox.setPreferredSize(new java.awt.Dimension(200, 24));
        enterpriseTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(34, 40, 49));
        jLabel8.setText("USER LAST NAME");

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(34, 40, 49));
        jLabel3.setText("ENTERPRISE TYPE");

        lastNameField.setBackground(new java.awt.Color(238, 238, 238));
        lastNameField.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        lastNameField.setForeground(new java.awt.Color(34, 40, 49));
        lastNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        lastNameField.setMaximumSize(new java.awt.Dimension(200, 24));
        lastNameField.setMinimumSize(new java.awt.Dimension(200, 24));
        lastNameField.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(34, 40, 49));
        jLabel2.setText("ENTERPRISE NAME");

        enterpriseNameField.setBackground(new java.awt.Color(238, 238, 238));
        enterpriseNameField.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        enterpriseNameField.setForeground(new java.awt.Color(34, 40, 49));
        enterpriseNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        enterpriseNameField.setMaximumSize(new java.awt.Dimension(200, 24));
        enterpriseNameField.setMinimumSize(new java.awt.Dimension(200, 24));
        enterpriseNameField.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel4.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(34, 40, 49));
        jLabel4.setText("CREATE USERNAME");

        jLabel5.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(34, 40, 49));
        jLabel5.setText("CREATE PASSWORD");

        userNameField.setBackground(new java.awt.Color(238, 238, 238));
        userNameField.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        userNameField.setForeground(new java.awt.Color(34, 40, 49));
        userNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 173, 181), 1, true));
        userNameField.setMaximumSize(new java.awt.Dimension(200, 24));
        userNameField.setMinimumSize(new java.awt.Dimension(200, 24));
        userNameField.setPreferredSize(new java.awt.Dimension(200, 24));

        backButton.setBackground(new java.awt.Color(238, 238, 238));
        backButton.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(238, 238, 238));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/back.png"))); // NOI18N
        backButton.setBorder(null);
        backButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        backButton.setMaximumSize(new java.awt.Dimension(60, 60));
        backButton.setMinimumSize(new java.awt.Dimension(60, 60));
        backButton.setPreferredSize(new java.awt.Dimension(60, 60));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(57, 62, 70));
        addButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(238, 238, 238));
        addButton.setText("ADD ENTERPRISE");
        addButton.setMaximumSize(new java.awt.Dimension(51, 33));
        addButton.setMinimumSize(new java.awt.Dimension(51, 33));
        addButton.setPreferredSize(new java.awt.Dimension(51, 33));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(541, 541, 541)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(455, 455, 455)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel3))
                                    .addGap(50, 50, 50)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(enterpriseTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(enterpriseNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(userNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(firstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(455, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(enterpriseNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String enpName = enterpriseNameField.getText();
        String enterprise = (String) enterpriseTypeComboBox.getSelectedItem();

        if (enterprise == Enterprise.FDA) {

            if (!userNameField.getText().isEmpty() && !passwordField.getText().isEmpty()) {

                if (!network.getEnterpriseDirectory().isUserExisting(userNameField.getText())) {
                    FDAEnterprise fdaEnterprise = (FDAEnterprise) network.getEnterpriseDirectory().newEnterprise(Enterprise.FDA, enpName);
                    if (passwordPattern() == true) {

                        Employee employee = fdaEnterprise.getEmployeeDirectory().newEmployee();
                        employee.setFirstName(firstNameField.getText());
                        employee.setLastName(lastNameField.getText());

                        fdaEnterprise.setEnterpriseName(enpName);
                        fdaEnterprise.setEnterpriseType(enterprise);

                        UserAccount userAccount = fdaEnterprise.getUserAccountDirectory().newAccount();
                        userAccount.setUserName(userNameField.getText());
                        userAccount.setPassword(passwordField.getText());
                        userAccount.setRole(new EnterpriseAdminRole());
                        userAccount.setEmployee(employee);

                        JOptionPane.showMessageDialog(this, "FDA Enterprise added");

                        enterpriseNameField.setText("");
                        firstNameField.setText("");
                        lastNameField.setText("");
                        userNameField.setText("");
                        passwordField.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Password should be at least 6 digits and contain at least one upper case letter, "
                                + "one lower case letter, one digit and one special character $, *, # or &.");
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Username is already existing");

                }

            } else {

                JOptionPane.showMessageDialog(this, "Username/Password is empty");
            }
        }

        if (enterprise == Enterprise.MANUFACTURER) {

            if (!userNameField.getText().isEmpty() && !passwordField.getText().isEmpty()) {
                //getText() != null && passwordField.getText() != null

                if (!network.getEnterpriseDirectory().isUserExisting(userNameField.getText())) {

                    if (passwordPattern() == true) {

                        ManufacturerEnterprise manufacturerEnterprise = (ManufacturerEnterprise) network.getEnterpriseDirectory().newEnterprise(Enterprise.MANUFACTURER, enpName);

                        Employee employee = manufacturerEnterprise.getEmployeeDirectory().newEmployee();
                        employee.setFirstName(firstNameField.getText());
                        employee.setLastName(lastNameField.getText());

                        manufacturerEnterprise.setEnterpriseName(enpName);
                        manufacturerEnterprise.setEnterpriseType(enterprise);

                        UserAccount userAccount1 = manufacturerEnterprise.getUserAccountDirectory().newAccount();
                        userAccount1.setUserName(userNameField.getText());
                        userAccount1.setPassword(passwordField.getText());
                        userAccount1.setRole(new EnterpriseAdminRole());
                        userAccount1.setEmployee(employee);

                        JOptionPane.showMessageDialog(this, "Manufacturers Enterprise added");

                        enterpriseNameField.setText("");
                        firstNameField.setText("");
                        lastNameField.setText("");
                        userNameField.setText("");
                        passwordField.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Password should be at least 6 digits and contain at least one upper case letter, "
                                + "one lower case letter, one digit and one special character $, *, # or &.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Username already existing");

                }
            } else {
                JOptionPane.showMessageDialog(this, "Username/Password is empty");
            }

        }
        if (enterprise == Enterprise.DISTRIBUTOR) {

            if (!userNameField.getText().isEmpty() && !passwordField.getText().isEmpty()) {

                if (!network.getEnterpriseDirectory().isUserExisting(userNameField.getText())) {

                    if (passwordPattern() == true) {

                        DistributorEnterprise distributorEnterprise = (DistributorEnterprise) network.getEnterpriseDirectory().newEnterprise(Enterprise.DISTRIBUTOR, enpName);

                        Employee employee = distributorEnterprise.getEmployeeDirectory().newEmployee();
                        employee.setFirstName(firstNameField.getText());
                        employee.setLastName(lastNameField.getText());

                        distributorEnterprise.setEnterpriseName(enpName);
                        distributorEnterprise.setEnterpriseType(enterprise);

                        UserAccount userAccount1 = distributorEnterprise.getUserAccountDirectory().newAccount();
                        userAccount1.setUserName(userNameField.getText());
                        userAccount1.setPassword(passwordField.getText());
                        userAccount1.setRole(new EnterpriseAdminRole());
                        userAccount1.setEmployee(employee);

                        JOptionPane.showMessageDialog(this, "Distributor Enterprise added");

                        enterpriseNameField.setText("");
                        firstNameField.setText("");
                        lastNameField.setText("");
                        userNameField.setText("");
                        passwordField.setText("");

                    } else {
                        JOptionPane.showMessageDialog(null, "Password should be at least 6 digits and contain at least one upper case letter, "
                                + "one lower case letter, one digit and one special character $, *, # or &.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Username already existing");

                }
            } else {
                JOptionPane.showMessageDialog(this, "Username/Password is empty");
            }

        }
        if (enterprise == Enterprise.HOSPITAL) {

            if (!userNameField.getText().isEmpty() && !passwordField.getText().isEmpty()) {
                //getText() != null && passwordField.getText() != null

                if (!network.getEnterpriseDirectory().isUserExisting(userNameField.getText())) {

                    if (passwordPattern() == true) {

                        HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) network.getEnterpriseDirectory().newEnterprise(Enterprise.HOSPITAL, enpName);

                        Employee employee = hospitalEnterprise.getEmployeeDirectory().newEmployee();
                        employee.setFirstName(firstNameField.getText());
                        employee.setLastName(lastNameField.getText());

                        hospitalEnterprise.setEnterpriseName(enpName);
                        hospitalEnterprise.setEnterpriseType(enterprise);

                        UserAccount userAccount1 = hospitalEnterprise.getUserAccountDirectory().newAccount();
                        userAccount1.setUserName(userNameField.getText());
                        userAccount1.setPassword(passwordField.getText());
                        userAccount1.setRole(new EnterpriseAdminRole());
                        userAccount1.setEmployee(employee);

                        JOptionPane.showMessageDialog(this, "Hospital Enterprise added");

                        enterpriseNameField.setText("");
                        firstNameField.setText("");
                        lastNameField.setText("");
                        userNameField.setText("");
                        passwordField.setText("");

                    } else {
                        JOptionPane.showMessageDialog(null, "Password should be at least 6 digits and contain at least one upper case letter, "
                                + "one lower case letter, one digit and one special character $, *, # or &.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Username already existing");

                }
            } else {
                JOptionPane.showMessageDialog(this, "Username/Password is empty");
            }

        }


    }//GEN-LAST:event_addButtonActionPerformed
    private boolean passwordPattern() {
        Pattern p = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m = p.matcher(passwordField.getText());
        boolean b = m.matches();
        return b;
    }
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);

        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void enterpriseTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseTypeComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField enterpriseNameField;
    private javax.swing.JComboBox enterpriseTypeComboBox;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTextField userNameField;
    // End of variables declaration//GEN-END:variables
}
